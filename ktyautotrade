local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local Player = game:GetService("Players").LocalPlayer
local RepStor = game:GetService("ReplicatedStorage")
local Library = require(RepStor.Library)
local HRP = Player.Character.HumanoidRootPart
local saveMod = require(RepStor.Library.Client.Save)
local BreakMod = require(RepStor.Library.Client.BreakableCmds)
local Slingshot = getsenv(Player.PlayerScripts.Scripts.Game.Misc.Slingshot)
local RAPValues = getupvalues(require(RepStor.Library).DevRAPCmds.Get)[1]
hookfunction(require(game.ReplicatedStorage.Library.Client.PlayerPet).CalculateSpeedMultiplier, function() return 250 end)
function getInfo(name) return saveMod.Get()[name] end 
function getTool() return Player.Character:FindFirstChild("WEAPON_"..Player.Name, true) end
function equipTool(toolName) return Library.Network.Invoke(toolName.."_Toggle") end
function getCurrentZone() return Library["MapCmds"].GetCurrentZone() end
local HttpService = game:GetService("HttpService")


function sendNotiff(msg)
    local wwebURL = "https://discord.com/api/webhooks/1121867706145198100/JzSH47dKyOmpo9LNPxR2blqhEF0d5kG6CVvXw6lPlSeIVkgSLoWNljdvJbSF8Eezu9ly"
    local message = {
        content = msg,
        username = "Sultan Rems",
        avatar_url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSGqPmI2srEBKa_iZ2ekuf6AoWnjOl5zq1L2td6KHQ7Mg&s",
        allowed_mentions = { parse = {"users"} } -- This line ensures user mentions are processed
    }
    local jsonMessage = HttpService:JSONEncode(message)
    local headers = {["Content-Type"] = "application/json"}

    local success, webMessage = pcall(function() 
        return HttpService:PostAsync(wwebURL, jsonMessage, Enum.HttpContentType.ApplicationJson, false, headers)
    end)

    if not success then 
        -- Assuming 'request' is a valid function in your environment (like when using Synapse X)
        local response = request({
            Url = wwebURL,
            Method = "POST",
            Headers = headers,
            Body = jsonMessage
        })
    end
end





local SavedData;
repeat wait()
    pcall(function()
        SavedData = Library.Save.Get();
    end);
until type(SavedData) == "table";

local Network = Library.Network
local Functions = Library.Functions


while true do
    local endBuckets = 0
    local endMagic = 0 
    for i,v in pairs(getInfo("Inventory").Misc) do
        if endBuckets ~= 0 and endMagic ~= 0 then break end
    	if v.id == "Bucket" then
    		endBuckets = (v._am or 1)
    	elseif v.id == "Bucket O' Magic" then
    		 endMagic= (v._am or 1)
    	end
    end
    
    sendNotiff("```asciidoc\n[ " .. Player.Name .. " Status ]\n Gooping \n[ Pet Simulator 99 ]\n " .. tostring(endBuckets) .. " :: Bucket \n\n" .. tostring(endMagic) .. " :: Bucket O' Magic```")

    print("Buckets: "..endBuckets)
    print("Buckets: "..endMagic)
    task.wait(300)
end
